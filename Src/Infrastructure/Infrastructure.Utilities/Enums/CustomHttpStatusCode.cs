using System;
using System.Collections.Generic;
using System.Net;
using System.Text;

namespace Infrastructure.Utilities.Enums
{
    public enum CustomHttpStatusCode
    {
        Continue = HttpStatusCode.Continue,
        SwitchingProtocols = HttpStatusCode.SwitchingProtocols,
        Processing = HttpStatusCode.Processing,
        EarlyHints = HttpStatusCode.EarlyHints,
        OK = HttpStatusCode.OK,
        Created = HttpStatusCode.Created,
        Accepted = HttpStatusCode.Accepted,
        NonAuthoritativeInformation = HttpStatusCode.NonAuthoritativeInformation,
        NoContent = HttpStatusCode.NoContent,
        ResetContent = HttpStatusCode.ResetContent,
        PartialContent = HttpStatusCode.PartialContent,
        MultiStatus = HttpStatusCode.MultiStatus,
        AlreadyReported = HttpStatusCode.AlreadyReported,
        IMUsed = HttpStatusCode.IMUsed,
        Ambiguous = HttpStatusCode.Ambiguous,
        MultipleChoices = HttpStatusCode.MultipleChoices,
        Moved = HttpStatusCode.Moved,
        MovedPermanently = HttpStatusCode.MovedPermanently,
        Found = HttpStatusCode.Found,
        Redirect = HttpStatusCode.Redirect,
        RedirectMethod = HttpStatusCode.RedirectMethod,
        SeeOther = HttpStatusCode.SeeOther,
        NotModified = HttpStatusCode.NotModified,
        UseProxy = HttpStatusCode.UseProxy,
        Unused = HttpStatusCode.Unused,
        RedirectKeepVerb = HttpStatusCode.RedirectKeepVerb,
        TemporaryRedirect = HttpStatusCode.TemporaryRedirect,
        PermanentRedirect = HttpStatusCode.PermanentRedirect,
        BadRequest = HttpStatusCode.BadRequest,
        Unauthorized = HttpStatusCode.Unauthorized,
        PaymentRequired = HttpStatusCode.PaymentRequired,
        Forbidden = HttpStatusCode.Forbidden,
        NotFound = HttpStatusCode.NotFound,
        MethodNotAllowed = HttpStatusCode.MethodNotAllowed,
        NotAcceptable = HttpStatusCode.NotAcceptable,
        ProxyAuthenticationRequired = HttpStatusCode.ProxyAuthenticationRequired,
        RequestTimeout = HttpStatusCode.RequestTimeout,
        Conflict = HttpStatusCode.Conflict,
        Gone = HttpStatusCode.Gone,
        LengthRequired = HttpStatusCode.LengthRequired,
        PreconditionFailed = HttpStatusCode.PreconditionFailed,
        RequestEntityTooLarge = HttpStatusCode.RequestEntityTooLarge,
        RequestUriTooLong = HttpStatusCode.RequestUriTooLong,
        UnsupportedMediaType = HttpStatusCode.UnsupportedMediaType,
        RequestedRangeNotSatisfiable = HttpStatusCode.RequestedRangeNotSatisfiable,
        ExpectationFailed = HttpStatusCode.ExpectationFailed,
        MisdirectedRequest = HttpStatusCode.MisdirectedRequest,
        UnprocessableEntity = HttpStatusCode.UnprocessableEntity,
        Locked = HttpStatusCode.Locked,
        FailedDependency = HttpStatusCode.FailedDependency,
        UpgradeRequired = HttpStatusCode.UpgradeRequired,
        PreconditionRequired = HttpStatusCode.PreconditionRequired,
        TooManyRequests = HttpStatusCode.TooManyRequests,
        RequestHeaderFieldsTooLarge = HttpStatusCode.RequestHeaderFieldsTooLarge,
        UnavailableForLegalReasons = HttpStatusCode.UnavailableForLegalReasons,
        InternalServerError = HttpStatusCode.InternalServerError,
        NotImplemented = HttpStatusCode.NotImplemented,
        BadGateway = HttpStatusCode.BadGateway,
        ServiceUnavailable = HttpStatusCode.ServiceUnavailable,
        GatewayTimeout = HttpStatusCode.GatewayTimeout,
        HttpVersionNotSupported = HttpStatusCode.HttpVersionNotSupported,
        VariantAlsoNegotiates = HttpStatusCode.VariantAlsoNegotiates,
        InsufficientStorage = HttpStatusCode.InsufficientStorage,
        LoopDetected = HttpStatusCode.LoopDetected,
        NotExtended = HttpStatusCode.NotExtended,
        NetworkAuthenticationRequired = HttpStatusCode.NetworkAuthenticationRequired,
        FluentValidation = 710
    }
}
